version: '3'

services:

    nodeapp:
      image: node
      container_name: nodeapp
      restart: always
      ports:
        - '8080:8080'
      command: >
          bash -c "cd application && npm i && npm run dev"
      volumes: 
        - ./backend/:/application/
      depends_on:
        - postgres
      networks:
      - app-network

    bullworker:
      image: node
      container_name: bullworker
      restart: always
      command: >
          bash -c "cd application && npm i && npm run worker_node"
      volumes: 
        - ./backend/:/application/
      depends_on:
        - nodeapp
        - redis
      networks:
      - app-network

    postgres:
        image: postgres:10.5
        restart: always
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=123
        logging:
          options:
            max-size: 10m
            max-file: "3"
        ports:
          - '5432:5432'
        volumes: 
          - ./postgres-data:/var/lib/postgresql/data
        networks:
        - app-network

    # pgadmin:
    #   container_name: pgadmin4_container
    #   image: dpage/pgadmin4
    #   restart: always
    #   environment:
    #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
    #     PGADMIN_DEFAULT_PASSWORD: root
    #   depends_on:
    #     - postgres
    #   ports:
    #     - "5050:80"
    #   networks:
    #     - app-network
    
    redis:
      image: 'bitnami/redis:latest'
      environment:
        - ALLOW_EMPTY_PASSWORD=yes
        - REDIS_PORT_NUMBER=6379
      ports:
        - "6379:6379"
      networks:
        - app-network

networks:
  app-network:
    driver: bridge